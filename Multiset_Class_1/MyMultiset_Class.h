#Generated by ChatGPT around 9/1/2025

#ifndef MYMULTISET_CLASS_H
#define MYMULTISET_CLASS_H

#include <vector>
#include <set>
#include <iostream>

class MyMultiset_Class {
private:
    int SetLength;
    int MinValue;
    int MaxValue;
    std::multiset<int> MyMultiset;
    std::vector<int> current;  // non-decreasing sequence for iteration

    // Helper to update MyMultiset from current vector
    void updateMultiset();

public:
    // Constructor
    MyMultiset_Class(int length, int minVal, int maxVal);

    // Reset to the first multiset (all MinValue)
    void reset();

    // Advance to the next unique multiset (non-decreasing sequence)
    bool next();

    // Return the current multiset
    const std::multiset<int>& getMultiset() const;

    // Print the current multiset
    void print() const;

    // ======================
    // Iterator support
    // ======================
    class Iterator {
    private:
        MyMultiset_Class* parent;
        bool isEnd;

    public:
        Iterator(MyMultiset_Class* p, bool end);

        const std::multiset<int>& operator*() const;
        Iterator& operator++();
        bool operator!=(const Iterator& other) const;
    };

    Iterator begin();
    Iterator end();
};

#endif // MYMULTISET_CLASS_H
